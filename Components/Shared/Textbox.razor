<span style="border: 2px solid @Attributes.BorderColor; 
             width: @Attributes.Width;
             height:@Attributes.Height;">
    @if(Attributes.Type == TextboxType.Phone)
    {
        <svg xmlns="http://www.w3.org/2000/svg" width="28" height="20" viewBox="0 0 28 20" fill="none">
            <rect x="0.25" y="0.25" width="27.5" height="19.5" rx="1.75" fill="white" stroke="#F5F5F5" stroke-width="0.5" />
            <mask id="mask0_209_234" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="28" height="20">
                <rect x="0.25" y="0.25" width="27.5" height="19.5" rx="1.75" fill="white" stroke="white" stroke-width="0.5" />
            </mask>
            <g mask="url(#mask0_209_234)">
                <path fill-rule="evenodd" clip-rule="evenodd" d="M0 13.3334H28V6.66669H0V13.3334Z" fill="#0C47B7" />
                <path fill-rule="evenodd" clip-rule="evenodd" d="M0 20H28V13.3333H0V20Z" fill="#E53B35" />
            </g>
        </svg>
        <svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" viewBox="0 0 8 8" fill="none">
            <path d="M4 7L0 2L8 2L4 7Z" fill="#7B8A9C" />
        </svg>
        <span class="regular-text s" style="color: @Attributes.TextColor">+7</span>
    }
    <input class="regular-text s" 
           style="color: @Attributes.TextColor" 
           type="@_inputType[Attributes.Type]" 
           @bind=Input 
           placeholder="@Attributes.PlaceholderText" />
</span>
@code {
    // todo: 1) placeholder color; 2) active svg; 3) input borders are visible on focus
    [Parameter] public TextboxAttributes Attributes { get; set; } = new();

    public string Input { get; set; } = string.Empty;

    private Dictionary<TextboxType, string> _inputType = new()
    {
        { TextboxType.Text, "text" },
        { TextboxType.Email, "email" },
        { TextboxType.Phone, "tel" }
    };
}
